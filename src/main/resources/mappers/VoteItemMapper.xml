<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mark.vote.dao.VoteItemMapper">
  <resultMap id="BaseResultMap" type="com.mark.vote.model.VoteItem">

    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title_id" jdbcType="INTEGER" property="titleId" />
    <result column="vote_no" jdbcType="INTEGER" property="voteNo" />
    <result column="vote_desc" jdbcType="INTEGER" property="voteDesc" />
    <result column="vote_num" jdbcType="INTEGER" property="voteNum" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">

    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">

    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">

    id, title_id, vote_no, vote_desc, vote_num, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.mark.vote.model.VoteItemExample" resultMap="BaseResultMap">

    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_vote_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.mark.vote.model.VoteItemExample">

    delete from t_vote_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.mark.vote.model.VoteItem">

    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_vote_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="titleId != null">
        title_id,
      </if>
      <if test="voteNo != null">
        vote_no,
      </if>
      <if test="voteDesc != null">
        vote_desc,
      </if>
      <if test="voteNum != null">
        vote_num,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="titleId != null">
        #{titleId,jdbcType=INTEGER},
      </if>
      <if test="voteNo != null">
        #{voteNo,jdbcType=INTEGER},
      </if>
      <if test="voteDesc != null">
        #{voteDesc,jdbcType=INTEGER},
      </if>
      <if test="voteNum != null">
        #{voteNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mark.vote.model.VoteItemExample" resultType="java.lang.Long">

    select count(*) from t_vote_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">

    update t_vote_item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.titleId != null">
        title_id = #{record.titleId,jdbcType=INTEGER},
      </if>
      <if test="record.voteNo != null">
        vote_no = #{record.voteNo,jdbcType=INTEGER},
      </if>
      <if test="record.voteDesc != null">
        vote_desc = #{record.voteDesc,jdbcType=INTEGER},
      </if>
      <if test="record.voteNum != null">
        vote_num = #{record.voteNum,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">

    update t_vote_item
    set id = #{record.id,jdbcType=INTEGER},
      title_id = #{record.titleId,jdbcType=INTEGER},
      vote_no = #{record.voteNo,jdbcType=INTEGER},
      vote_desc = #{record.voteDesc,jdbcType=INTEGER},
      vote_num = #{record.voteNum,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mark.vote.model.VoteItem">

    update t_vote_item
    <set>
      <if test="titleId != null">
        title_id = #{titleId,jdbcType=INTEGER},
      </if>
      <if test="voteNo != null">
        vote_no = #{voteNo,jdbcType=INTEGER},
      </if>
      <if test="voteDesc != null">
        vote_desc = #{voteDesc,jdbcType=INTEGER},
      </if>
      <if test="voteNum != null">
        vote_num = #{voteNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.mark.vote.model.VoteItemExample" resultMap="BaseResultMap">

    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_vote_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>