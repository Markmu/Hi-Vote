<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mark.vote.dao.VoteTitleMapper">
  <resultMap id="BaseResultMap" type="com.mark.vote.model.VoteTitle">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="theme_id" jdbcType="INTEGER" property="themeId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="img_name" jdbcType="INTEGER" property="imgName" />
    <result column="vote_max" jdbcType="INTEGER" property="voteMax" />
    <result column="vote_min" jdbcType="INTEGER" property="voteMin" />
    <result column="must_vote" jdbcType="INTEGER" property="mustVote" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, theme_id, title, type, img_name, vote_max, vote_min, must_vote, create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.mark.vote.model.VoteTitleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_vote_title
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.mark.vote.model.VoteTitleExample">
    delete from t_vote_title
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.mark.vote.model.VoteTitle">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_vote_title
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="themeId != null">
        theme_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="imgName != null">
        img_name,
      </if>
      <if test="voteMax != null">
        vote_max,
      </if>
      <if test="voteMin != null">
        vote_min,
      </if>
      <if test="mustVote != null">
        must_vote,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="themeId != null">
        #{themeId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="imgName != null">
        #{imgName,jdbcType=INTEGER},
      </if>
      <if test="voteMax != null">
        #{voteMax,jdbcType=INTEGER},
      </if>
      <if test="voteMin != null">
        #{voteMin,jdbcType=INTEGER},
      </if>
      <if test="mustVote != null">
        #{mustVote,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mark.vote.model.VoteTitleExample" resultType="java.lang.Long">
    select count(*) from t_vote_title
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_vote_title
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.themeId != null">
        theme_id = #{record.themeId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.imgName != null">
        img_name = #{record.imgName,jdbcType=INTEGER},
      </if>
      <if test="record.voteMax != null">
        vote_max = #{record.voteMax,jdbcType=INTEGER},
      </if>
      <if test="record.voteMin != null">
        vote_min = #{record.voteMin,jdbcType=INTEGER},
      </if>
      <if test="record.mustVote != null">
        must_vote = #{record.mustVote,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_vote_title
    set id = #{record.id,jdbcType=INTEGER},
      theme_id = #{record.themeId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      img_name = #{record.imgName,jdbcType=INTEGER},
      vote_max = #{record.voteMax,jdbcType=INTEGER},
      vote_min = #{record.voteMin,jdbcType=INTEGER},
      must_vote = #{record.mustVote,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mark.vote.model.VoteTitle">
    update t_vote_title
    <set>
      <if test="themeId != null">
        theme_id = #{themeId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="imgName != null">
        img_name = #{imgName,jdbcType=INTEGER},
      </if>
      <if test="voteMax != null">
        vote_max = #{voteMax,jdbcType=INTEGER},
      </if>
      <if test="voteMin != null">
        vote_min = #{voteMin,jdbcType=INTEGER},
      </if>
      <if test="mustVote != null">
        must_vote = #{mustVote,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.mark.vote.model.VoteTitleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_vote_title
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>